[config apt-get to use proxy]
vim /etc/apt/apt.conf
//append following lines
Acquire::http::Proxy "http://192.168.152.1:1080/";

sudo apt-get update
sudo apt-get install automake autogen autoconf
sudo apt-get install build-essential

sudo apt-get install vim
sudo apt-get install git
sudo apt-get install gccgo-5
sudo update-alternatives --set go /usr/bin/go-5
git clone https://github.com/golang/go.git

sudo apt-get install tree
sudo apt-get install openssh-server

[install nfs server]
sudo apt install nfs-kernel-server
sudo vim /etc/exports
/opt/ums    *(rw,sync,no_root_squash,no_subtree_check)
sudo systemctl start nfs-kernel-server.service
//Mac mount: sudo mount -t nfs -o rw,resvport 172.16.197.180:/opt/ums ums

[install samba server]
sudo apt-get install samba
sudo vim /etc/samba/smb.conf
sudo systemctl restart smbd.service nmbd.service 
//Mac mount: mount_smbfs //ray:ray@172.16.197.180/ums ums


[install mongodb]
tar -zxf mogodb*.tar.gz -C /opt/mongodb
vim ./.bashrc --> export /opt/mongodb/$VERSION/bin to PATH
alias imongod="mongod --dbpath /opt/mongodb/data/db"
wget  https://raw.githubusercontent.com/mongodb/docs-assets/primer-dataset/primer-dataset.json
mongoimport --db test --collection restaurants --drop --file ./primer-dataset.json
mongo
use admin
//create user for user administration
db.createUser({user:"iAdmin", pwd:"iAdmin", roles:[{role: "userAdminAnyDatabase", db: "admin"}]})
db.createUser({user:"useradmin", pwd:"&Useradmin", roles:[{role: "userAdminAnyDatabase", db: "admin"}]})
//create user for db administration
db.createUser({user:"dbadmin", pwd:"&Dbadmin", roles:[{role: "dbAdminAnyDatabase", db: "admin"},{role: "readWriteAnyDatabase", db: "admin"},{role: "clusterAdmin", db: "admin"}]})


[install JDK]
mkdir -p /opt/jdk
tar -zxf jdk-8u121-linux-x64.tar.gz -C /opt/jdk/
vim ~/.bashrc
export JAVA_HOME=/opt/jdk/jdk1.8.0_121
export JRE_HOME=/opt/jdk/jdk1.8.0_121/jre
export PATH=$JRE_HOME/bin:$JAVA_HOME/bin:$PATH

[install inteliJ ieda]
mkdir -p /opt/prog/inteliJ
tar -zxf ideaIU-2016.3.4-no-jdk.tar.gz -C /opt/prog/inteliJ/
export PATH=$PATH:/opt/prog/inteliJ/idea-IU-163.12024.16/bin
alias idea="idea.sh&"
//config: follow /opt/prog/inteliJ/idea-IU-163.12024.16/Install-Linux-tar.txt


[install polipo + shadowsocks]
sudo apt-get install libpcre3 libpcre3-dev
sudo apt-get install asciidoc
sudo apt-get install zlib1g-dev
sudo apt-get install libssl-dev
sudo apt-get install polipo
sudo make
sudo make install
//shadowsocks config.json
{
	"server": "23.106.151.137",
	"local_address": "127.0.0.1",
	"server_port": 9601,
	"local_port" : 1080,
	"password": "fuckgfw",
	"method": "aes-256-cfb",
	"timeout": 300,
	"fast_open":false
}
//launch shadowsocks:
ss-local -c config.json
//polipo config, sudo vim /etc/polipo/config
logSyslog = true
logFile = /var/log/polipo/polipo.log
logLevel=4

socksParentProxy = "127.0.0.1:1080"
socksProxyType = socks5
 
chunkHighMark = 50331648
objectHighMark = 16384
 
serverMaxSlots = 64
serverSlots = 16
serverSlots1 = 32
 
proxyAddress = "0.0.0.0"
proxyPort = 8123
//relaunch polipo
sudo /etc/init.d/polipo restart
//check proxy is working or not:
curl ip.gs
export http_proxy=http://localhost:8123
curl ip.gs
curl www.google.com
git clone https://android.googlesource.com/tools/repo --config http.proxy=localhost:8123

[config ss-local as service]
sudo vim /lib/systemd/system/shadowsocks.service
	[Unit]
	Description=Shadowsocks Client Service
	After=network.target

	[Service]
	Type=simple
	User=nobody
	ExecStart=/usr/local/bin/ss-local -c /opt/github/shadowsocksConfig/config.json

	[Install]
	WantedBy=multi-user.target
//launch service 
sudo systemctl start shadowsocks.service
sudo systemctl enable shadowsocks.service



[upgrade xz to 5.2.3]
//uninstall the privious version
sudo apt-get remove xz-utils
//get source code
cd /opt/prog
wget http://tukaani.org/xz/xz-5.2.3.tar.bz2
//install
tar -jxf xz-5.2.3.tar.bz2 
cd xz-5.2.3/
./configure
make
sudo make install
//test multi-thread compression
XZ_OPT="-9e --threads=2" tar -Jcf webRTC.tar.xz webRTC














